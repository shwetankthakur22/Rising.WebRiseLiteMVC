@using Rising.WebRise.Models
@model ImportFileInput
@{
    ViewBag.Title = "RateFileImport";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}
<link href="~/Content/assets/sweetalert/css/sweetalert.css" rel="stylesheet" />
<script src="~/Content/assets/sweetalert/js/sweetalert.js"></script>


<style>
    .progress {
     width: 600px;
    height: 15px; /* Adjust the height as needed */
    margin-bottom: 10px; /* Add margin if necessary */
}
    .progress-bar {
     width: 600px ;
    height: 100%; /* Set the height to 100% */
    border-radius: 0; /* Remove border-radius for a flat appearance */
    background-color: #2471A3; /* Change the background color as needed */
}
</style>

<script>
    $(document).ready(function () {
        var sweetAlertOptions = @Html.Raw(TempData["sweetAlertOptions"]); // Deserialize the TempData value

        if (sweetAlertOptions) {
            Swal.fire(sweetAlertOptions); // Display the SweetAlert notification
        }
    });
</script>



@*JavaScript to Check Date, File and Sesion Validation*@
<script>
    
    var isFormSubmitted = false; // Define a flag variable

  

    $(document).ready(function () {
        $('#closePriceForm').submit(function (e) {
            e.preventDefault(); // Prevent the default form submission
            debugger;
            var formData = new FormData(this); // Create a FormData object with form data

            var progressBar = $('.progress');
            var progressBarValue = $('.progress-bar');
            var progressBarText = $('.progress-text'); 
            if (isFormSubmitted) {
                return; // Form is already submitted, no need to submit again
            }
            isFormSubmitted = true;

            $.ajax({
                url: '/Process/ClosingPriceImportResult',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                xhr: function () {
                    var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = (evt.loaded / evt.total) * 100;
                            progressBar.show();
                            progressBarValue.css('width', percentComplete + '%');
                            //progressBarText.text(percentComplete.toFixed(0) + '%');
                        }
                    }, false);
                    return xhr;
                },
                success: function (response) {
                    // Handle the response from the server here
                    console.log(response);

                    // You can display a success message or redirect as needed
                    if (response.success) {
                        Swal.fire({
                            title: "Success",
                            text: "File uploaded successfully!",
                            icon: "success",
                            confirmButtonText: "OK",
                        });
                    } else {
                        Swal.fire({
                            title: "Error",
                            text: response.errorMessage,
                            icon: "error",
                            confirmButtonText: "OK",
                        });
                    }

                    // Hide the progress bar after completion
                    progressBar.hide();
                },
                error: function (xhr, status, error) {
                    // Handle errors here
                    console.error('AJAX error:', error);

                    Swal.fire({
                        title: "Error",
                        text: "An error occurred while uploading the file.",
                        icon: "error",
                        confirmButtonText: "OK",
                    });

                    // Hide the progress bar after error
                    progressBar.hide();
                }
            });
        });
    });

    function checkDateEquality() {
        // Get the selected trade date value
        debugger;
        var exchange = document.getElementById("exchange").value;
        var tradeDate = document.getElementById("date-end").value;
        var fileInput = document.getElementById("fileupload").value;
        var extractName = fileInput.substring(0, 19);
        var fileName = extractName.substring(extractName.length - 7);

        if (isFormSubmitted) {
            return false; // Form is already submitted, no need to submit again
        }
        if (exchange == "NSE" && fileName == "G_T_DSP") {
            var dateresult = fileInput.substr(fileInput.length - 12, 8);
            var dateObject = dateresult.replace(/(\d\d)(\d\d)(\d\d\d\d)/, "$3-$2-$1");
            if (tradeDate != dateObject) {
                Swal.fire({
                    title: "Date Mismatch",
                    text: "The Date Doesn't Match The File Date...!",
                    icon: "information",
                    confirmButtonText: "OK",
                });
                return false;
            }
            var sessionExt = fileInput.substring(28, 29);
            var sessionId = sessionExt;
        } else if (exchange == "INX" && fileName == "INX_MS_") {
            var dateResult = fileInput.substr(fileInput.length - 14, 8);
            var dateobject = dateResult.replace(/(\d\d\d\d)(\d\d)(\d\d)/, "$1-$2-$3");
            if (tradeDate != dateobject) {
                Swal.fire({
                    title: "Date Mismatch",
                    text: "The Date Doesn't Match The File Date...!",
                    icon: "information",
                    confirmButtonText: "OK",
                });
                return false;
            }
            var sessionExt = fileInput.substring(28, 29);
            var sessionId = sessionExt;
            if (document.getElementById("session").value != sessionId) {
                Swal.fire({
                    title: "Check Session",
                    text: "Wrong Session Selection...!",
                    icon: "information",
                    confirmButtonText: "OK",
                });
                return false;
            }
        } else {
            Swal.fire({
                title: "Wrong Combination",
                text: "Uploaded File Doesn't Belong To The Selected Exchange...!",
                icon: "error",
                confirmButtonText: "OK",
            });
            return false;
        }

        // Trigger the form submission
        $('#closePriceForm').submit();
    }
</script>






<div class="row">
    <div class="col-xl-12 col-lg-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <div class="header-title">
                    <h4 class="card-title">CLOSING PRICE IMPORT
                        </h4>
                </div>
            </div>
            <div class="card-body">
                <div class="new-user-info">

                    @using (Html.BeginForm("ClosingPriceImportResult", "Process", new { @method = "ClosingFile" }, FormMethod.Post, new { enctype = "multipart/form-data", id = "closePriceForm" }))
                    {
                        <div class="row">
                            <div class="col-md-7">
                                <div class="row">
                                    <div class="col-md-2">
                                        @Html.LabelFor(m => m.Exchange, new { @class = "form-label"})
                                    </div>
                                    <div class="col-md-3">
                                        @Html.DropDownListFor(m => m.Exchange, new SelectList(new[] { "NSE", "INX" }), new { @class = "form-control", @id = "exchange" })
                                    </div>
                                    <div class="col-md-2">
                                        @Html.LabelFor(m => m.Session, new { @class = "form-label" })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.DropDownListFor(m => m.Session, new SelectList(new[] { "1", "2" }), new { @class = "form-control", @id="session"})
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-2">
                                        @Html.LabelFor(m => m.TradeDate, new { @class = "form-label" })
                                    </div>
                                    <div class="col-md-3">
                                       
                                        @*@Html.TextBoxFor(m => m.TradeDate, null, new { @class = "form-control", @type = "date", @id = "date-end" })*@
                                        @Html.TextBoxFor(m => m.TradeDate, "{0:MM/dd/yyyy}", new { @class = "form-control", @type = "date", @id = "date-end", @onChange = "getDate()", @placeholder = "DD-MM-YYYY" })
                                    </div>
                                    <div class="col-md-2">
                                        @Html.LabelFor(m => m.FileType, new { @class = "form-label" })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.DropDownListFor(m => m.FileType, new SelectList(new[] { "CN", "PS03", "DSP" }), new { @class = "form-control" })
                                    </div>

                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="row">
                                    <div class="col-md-2">
                                        @Html.LabelFor(m => m.FilePath, new { @class = "form-label"})
                                    </div>
                                    <div class="col-md-10">
                                        <div class="custom-file">
                                            <input id="fileupload" name="TradeFile" class="custom-file-input" type="file" />
                                            <label class="custom-file-label" for="TradeFile">Choose file</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box-footer">
                            <input type="submit" value="Upload" class="btn btn-sm btn-primary pull-right check" onclick="return checkDateEquality();" />
                            <a href="javascript:void(0);" class="btn btn-sm btn-primary" onclick="history.go(-1);">Back</a>
                        </div>

                        <div class="d-flex justify-content-center ">
                            <div class="progress" style="display: none;">
                                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                @*<div class="progress-text">0%</div>*@
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>

